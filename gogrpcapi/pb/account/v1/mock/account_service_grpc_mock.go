// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/YongJeong-Kim/go/gogrpcapi/pb/account/v1 (interfaces: AccountServiceServer)

// Package accountv1mock is a generated GoMock package.
package accountv1mock

import (
	context "context"
	reflect "reflect"

	accountv1 "github.com/YongJeong-Kim/go/gogrpcapi/pb/account/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountServiceServer is a mock of AccountServiceServer interface.
type MockAccountServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceServerMockRecorder
}

// MockAccountServiceServerMockRecorder is the mock recorder for MockAccountServiceServer.
type MockAccountServiceServerMockRecorder struct {
	mock *MockAccountServiceServer
}

// NewMockAccountServiceServer creates a new mock instance.
func NewMockAccountServiceServer(ctrl *gomock.Controller) *MockAccountServiceServer {
	mock := &MockAccountServiceServer{ctrl: ctrl}
	mock.recorder = &MockAccountServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountServiceServer) EXPECT() *MockAccountServiceServerMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountServiceServer) CreateAccount(arg0 context.Context, arg1 *accountv1.CreateAccountRequest) (*accountv1.CreateAccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(*accountv1.CreateAccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountServiceServerMockRecorder) CreateAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountServiceServer)(nil).CreateAccount), arg0, arg1)
}

// mustEmbedUnimplementedAccountServiceServer mocks base method.
func (m *MockAccountServiceServer) mustEmbedUnimplementedAccountServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedAccountServiceServer")
}

// mustEmbedUnimplementedAccountServiceServer indicates an expected call of mustEmbedUnimplementedAccountServiceServer.
func (mr *MockAccountServiceServerMockRecorder) mustEmbedUnimplementedAccountServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedAccountServiceServer", reflect.TypeOf((*MockAccountServiceServer)(nil).mustEmbedUnimplementedAccountServiceServer))
}
