version: '3.8'

services:
  master:
    image: mysql
    container_name: master
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: aaa
    ports:
      - "33306:3306"

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
#      ZOOKEEPER_SERVERS: zookeeper-1:2888:2988;zookeeper-2:2888:2988;zookeeper-3:2888:2988
#    network_mode: host
    ports:
      - "22181:2181"
#      - "22888:2888"
    restart: always
    volumes:
      - ./vol/z1/data:/data
      - ./vol/z1/datalog:/datalog
#    extra_hosts:
#      - "moby:127.0.0.1"

#  zookeeper-2:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_SERVER_ID: 2
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
#      ZOOKEEPER_SERVERS: zookeeper-1:2888:2988;zookeeper-2:2888:2988;zookeeper-3:2888:2988
##    network_mode: host
#    ports:
#      - "32181:2181"
#      - "32888:2888"
#    restart: always
#    volumes:
#      - ./vol/z2/data:/data
#      - ./vol/z2/datalog:/datalog
##    extra_hosts:
##      - "moby:127.0.0.1"
#
#  zookeeper-3:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_SERVER_ID: 3
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
#      ZOOKEEPER_SERVERS: zookeeper-1:2888:2988;zookeeper-2:2888:2988;zookeeper-3:2888:2988
##    network_mode: host
#    ports:
#      - "42181:2181"
#      - "42888:2888"
#    restart: always
#    volumes:
#      - ./vol/z3/data:/data
#      - ./vol/z3/datalog:/datalog
##    extra_hosts:
##      - "moby:127.0.0.1"

  kafka-1:
    image: confluentinc/cp-kafka:latest
    restart: always
#    network_mode: host
    depends_on:
      - zookeeper-1
#      - zookeeper-2
#      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:19092
    ports:
      - "19092:9092"
    volumes:
      - ./vol/k1/data:/var/lib/kafka/data
#    extra_hosts:
#      - "moby:127.0.0.1"

  kafka-2:
    image: confluentinc/cp-kafka:latest
    restart: always
#    network_mode: host
    depends_on:
      - zookeeper-1
#      - zookeeper-2
#      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,EXTERNAL://localhost:29092
    ports:
      - "29092:9092"
    volumes:
      - ./vol/k2/data:/var/lib/kafka/data
#    extra_hosts:
#      - "moby:127.0.0.1"

  kafka-3:
    image: confluentinc/cp-kafka:latest
    restart: always
#    network_mode: host
    depends_on:
      - zookeeper-1
#      - zookeeper-2
#      - zookeeper-3
    environment:
      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:9092,EXTERNAL://localhost:39092
    ports:
      - "39092:9092"
    volumes:
      - ./vol/k3/data:/var/lib/kafka/data
#    extra_hosts:
#      - "moby:127.0.0.1"

#  schema-registry:
#    image: confluentinc/cp-schema-registry
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - kafka-1
#      - kafka-2
#      - kafka-3
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
#      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#
#  connect:
#    image: cnfldemos/cp-server-connect-datagen:0.6.4-7.6.0
#    hostname: connect
#    container_name: connect
#    depends_on:
#      - kafka-1
#      - kafka-2
#      - kafka-3
#      - schema-registry
#    ports:
#      - "8083:8083"
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
#      CONNECT_REST_ADVERTISED_HOST_NAME: connect
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#      # CLASSPATH required due to CC-2422
#      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.6.1.jar
#      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
#      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
#
#  control-center:
#    image: confluentinc/cp-enterprise-control-center
#    hostname: control-center
#    container_name: control-center
#    depends_on:
#      - kafka-1
#      - kafka-2
#      - kafka-3
#      - schema-registry
#      - connect
##      - ksqldb-server
#    ports:
#      - "9021:9021"
#    environment:
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-1:9092,kafka-2:9092,kafka-3:9092'
#      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
##      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
##      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
#      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
#      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
#      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
#      PORT: 9021

#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    container_name: kafdrop
#    environment:
#      - KAFKA_BROKERCONNECT=kafka-1:9092,kafka-2:9092,kafka-3:9092
##      - JVM_OPTS="-Xms32M -Xmx64M"
#      - SERVER_SERVLET_CONTEXTPATH="/admin"
#    ports:
#      - 19000:9000
#    depends_on:
#      kafka-1:
#        condition: service_started
#      kafka-2:
#        condition: service_started
#      kafka-3:
#        condition: service_started
